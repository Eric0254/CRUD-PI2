/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.mycompany.testepi;

import DAO.ClienteDAO;
import com.mycompany.testepi.MODEL.Cliente;
import java.awt.Color;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Eric
 */
public class CadClientes extends javax.swing.JInternalFrame {

    /**
     * Creates new form CadClientes
     */
    public CadClientes() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        ConsuCliente = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtBusca = new javax.swing.JTextField();
        rbNome = new javax.swing.JRadioButton();
        rbCPF = new javax.swing.JRadioButton();
        btProcurar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabela_Cliente = new javax.swing.JTable();
        BtnAlterar = new javax.swing.JButton();
        btNovoCadastro = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        CadastroCliente = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        lblNome = new javax.swing.JLabel();
        txtNomeCliente = new javax.swing.JTextField();
        lblCPF = new javax.swing.JLabel();
        txtCPF = new javax.swing.JFormattedTextField();
        lblDataNascimento = new javax.swing.JLabel();
        lblGenero = new javax.swing.JLabel();
        lblEndereço = new javax.swing.JLabel();
        txtLogradouro = new javax.swing.JTextField();
        lblCEP = new javax.swing.JLabel();
        txtCEP = new javax.swing.JFormattedTextField();
        lblBairro = new javax.swing.JLabel();
        txtBairro = new javax.swing.JTextField();
        lblEstadoCivil = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        lblCelular = new javax.swing.JLabel();
        txtCelular = new javax.swing.JFormattedTextField();
        btnSalvar = new javax.swing.JButton();
        cbxGenero = new javax.swing.JComboBox<>();
        cbxEstadoCivil = new javax.swing.JComboBox<>();
        btnLimpar = new javax.swing.JButton();
        btnAlterarCliente = new javax.swing.JButton();
        jdcDataNascimento = new com.toedter.calendar.JDateChooser();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Cadastro Cliente");

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setText("Buscar cliente:");

        txtBusca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscaKeyTyped(evt);
            }
        });

        rbNome.setSelected(true);
        rbNome.setText("Nome");
        rbNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbNomeActionPerformed(evt);
            }
        });

        rbCPF.setText("CPF");

        btProcurar.setText("Procurar");
        btProcurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btProcurarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(141, 141, 141))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtBusca)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(rbCPF, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                                        .addGap(109, 109, 109)
                                        .addComponent(btProcurar, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(rbNome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(172, 172, 172)))))))
                .addGap(17, 17, 17))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(rbNome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbCPF))
                    .addComponent(btProcurar))
                .addGap(0, 10, Short.MAX_VALUE))
        );

        Tabela_Cliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CPF", "Nome ", "Celular", "Email", "Data Nasc", "Gênero", "Estado Civil", "Logradouro ", "Bairro", "CEP"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Tabela_Cliente);

        BtnAlterar.setText("Alterar");
        BtnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAlterarActionPerformed(evt);
            }
        });

        btNovoCadastro.setText("Novo cadastro");
        btNovoCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNovoCadastroActionPerformed(evt);
            }
        });

        btExcluir.setText("Excluir");
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ConsuClienteLayout = new javax.swing.GroupLayout(ConsuCliente);
        ConsuCliente.setLayout(ConsuClienteLayout);
        ConsuClienteLayout.setHorizontalGroup(
            ConsuClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ConsuClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ConsuClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(ConsuClienteLayout.createSequentialGroup()
                        .addGroup(ConsuClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ConsuClienteLayout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(btExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, 457, Short.MAX_VALUE))
                            .addComponent(BtnAlterar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btNovoCadastro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        ConsuClienteLayout.setVerticalGroup(
            ConsuClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ConsuClienteLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(ConsuClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(BtnAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btNovoCadastro)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Consultar cliente", ConsuCliente);

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setText("Dados Pessoais");

        lblNome.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblNome.setText("Nome:");

        txtNomeCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNomeClienteKeyTyped(evt);
            }
        });

        lblCPF.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblCPF.setText("CPF:");

        try {
            txtCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        lblDataNascimento.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblDataNascimento.setText("Data Nasc:");

        lblGenero.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblGenero.setText("Gênero:");

        lblEndereço.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblEndereço.setText("Cidade:");

        txtLogradouro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtLogradouroKeyTyped(evt);
            }
        });

        lblCEP.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblCEP.setText("CEP:");

        try {
            txtCEP.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        lblBairro.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblBairro.setText("Bairro:");

        txtBairro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBairroKeyTyped(evt);
            }
        });

        lblEstadoCivil.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblEstadoCivil.setText("Estado Civil:");

        jLabel12.setText("Contato");

        lblEmail.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblEmail.setText("Email:");

        lblCelular.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblCelular.setText("Celular:");

        try {
            txtCelular.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        cbxGenero.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Selecione Item>", "Masculino", "Feminino", "Outros" }));

        cbxEstadoCivil.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Selecione item>", "Solteiro(a)", "Casado(a)", "Divorciado(a)", "Viuvo(a)" }));

        btnLimpar.setText("Limpar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        btnAlterarCliente.setText("Alterar");
        btnAlterarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(345, 345, 345)
                .addComponent(jLabel12)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(320, 320, 320))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblGenero)
                                    .addComponent(lblNome, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblCPF))
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(lblBairro)
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(lblEndereço)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(txtCPF, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE)
                                        .addGap(71, 71, 71))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(cbxGenero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                        .addComponent(lblEstadoCivil)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cbxEstadoCivil, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(17, 17, 17))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(lblDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jdcDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6))))
                            .addComponent(txtNomeCliente)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(txtBairro)
                                .addGap(18, 18, 18)
                                .addComponent(lblCEP)
                                .addGap(18, 18, 18)
                                .addComponent(txtCEP, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtLogradouro))
                        .addGap(117, 117, 117))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCelular)
                            .addComponent(lblEmail))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(txtEmail)
                                .addGap(114, 114, 114))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(txtCelular, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(btnAlterarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNome)
                    .addComponent(txtNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCPF)
                            .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDataNascimento))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblGenero)
                            .addComponent(lblEstadoCivil)
                            .addComponent(cbxGenero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbxEstadoCivil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEndereço)
                            .addComponent(txtLogradouro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtCEP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblCEP))
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblBairro)
                                .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEmail)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCelular)
                            .addComponent(txtCelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(51, 51, 51)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAlterarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jdcDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout CadastroClienteLayout = new javax.swing.GroupLayout(CadastroCliente);
        CadastroCliente.setLayout(CadastroClienteLayout);
        CadastroClienteLayout.setHorizontalGroup(
            CadastroClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CadastroClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        CadastroClienteLayout.setVerticalGroup(
            CadastroClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CadastroClienteLayout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Cadastro", CadastroCliente);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Método de validação para o campo de texto Busca
     *
     * @param evt
     */
    private void txtBuscaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscaKeyTyped
        if (rbNome.isSelected()) {

            if (txtBusca.getText().length() >= 100) {
                evt.consume();
                JOptionPane.showMessageDialog(this, "Número máximo de caracteres digitados!");
                txtBusca.setText("");
            }
        }

        if (rbCPF.isSelected()) {
            String caracteres = "0987654321";
            if (!caracteres.contains(evt.getKeyChar() + "")) {
                evt.consume();
            }
            if (txtBusca.getText().length() >= 11) {
                evt.consume();
            }
        }
    }//GEN-LAST:event_txtBuscaKeyTyped
    /**
     * Método de validação para o botão Procurar
     *
     * @param evt
     */
    private void btProcurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btProcurarActionPerformed
        if (rbNome.isSelected()) {
            if (txtBusca.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(this, "Digite o nome do cliente para busca-lo");
            }
            BuscarporNome(txtBusca.getText());
            return;
        }
        if (rbCPF.isSelected()) {
            if (txtBusca.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(this, "Digite o CPF do cliente para busca-lo");
            }
            if (txtBusca.getText().trim().length() > 12) {
                JOptionPane.showMessageDialog(this, "Digite apenas os 11 digitos do CPF");
                txtBusca.setText("");
            }
            BuscarporCPF(txtBusca.getText());
        }
        String Procurar = txtBusca.getText();
    }//GEN-LAST:event_btProcurarActionPerformed
    /**
     * Função que indica qual linha do cliente você quer alterar
     *
     * @param evt
     */
    private void BtnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAlterarActionPerformed
        int LinhaSelecionada = Tabela_Cliente.getSelectedRow();
        btnAlterarCliente.setEnabled(true);
        try {
            txtCPF.setText(Tabela_Cliente.getModel().getValueAt(LinhaSelecionada, 0).toString());
            txtNomeCliente.setText(Tabela_Cliente.getModel().getValueAt(LinhaSelecionada, 1).toString());
            txtCelular.setText(Tabela_Cliente.getModel().getValueAt(LinhaSelecionada, 2).toString());
            txtEmail.setText(Tabela_Cliente.getModel().getValueAt(LinhaSelecionada, 3).toString());
            cbxGenero.setSelectedItem(Tabela_Cliente.getModel().getValueAt(LinhaSelecionada, 5).toString());
            cbxEstadoCivil.setSelectedItem(Tabela_Cliente.getModel().getValueAt(LinhaSelecionada, 6).toString());
            txtLogradouro.setText(Tabela_Cliente.getModel().getValueAt(LinhaSelecionada, 7).toString());
            txtBairro.setText(Tabela_Cliente.getModel().getValueAt(LinhaSelecionada, 8).toString());
            txtCEP.setText(Tabela_Cliente.getModel().getValueAt(LinhaSelecionada, 9).toString());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Selecione a Linha ");
        }
        try {
            Date data = new SimpleDateFormat("yyyy-MM-dd").parse((String) Tabela_Cliente.getValueAt(LinhaSelecionada, 4));
            jdcDataNascimento.setDate(data);
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(null, e);
        }

        jTabbedPane1.setSelectedIndex(1);
        btnAlterarCliente.setVisible(true);
        btnAlterarCliente.setEnabled(true);
       ;
    }//GEN-LAST:event_BtnAlterarActionPerformed
    /**
     * Permite fazer novos cadastros
     *
     * @param evt
     */
    private void btNovoCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNovoCadastroActionPerformed
        jTabbedPane1.setEnabledAt(1, true);
        jTabbedPane1.setSelectedIndex(1);
        btnAlterarCliente.setEnabled(false);
    }//GEN-LAST:event_btNovoCadastroActionPerformed
    /**
     * Permite excluir um cliente já cadastrado
     *
     * @param evt
     */
    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
        int LinhaSelecionada = Tabela_Cliente.getSelectedRow();
        String Cpf = Tabela_Cliente.getValueAt(LinhaSelecionada, 0).toString();
        ClienteDAO.Excluir(Cpf);
        ListarTabela();
    }//GEN-LAST:event_btExcluirActionPerformed
    /**
     * Método de validação para o campo de texto Nome
     *
     * @param evt
     */
    private void txtNomeClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomeClienteKeyTyped
        if (txtNomeCliente.getText().length() >= 100) {
            evt.consume();
            JOptionPane.showMessageDialog(this, "Número máximo de caracteres digitados!");
        }
    }//GEN-LAST:event_txtNomeClienteKeyTyped
    /**
     * Método de validação para o campo de texto Cidade
     *
     * @param evt
     */
    private void txtLogradouroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLogradouroKeyTyped
        if (txtLogradouro.getText().length() >= 50) {
            evt.consume();
            JOptionPane.showMessageDialog(this, "Número máximo de caracteres digitados!");
        }
    }//GEN-LAST:event_txtLogradouroKeyTyped
    /**
     * Método de validação para o campo de texto Bairro
     *
     * @param evt
     */
    private void txtBairroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBairroKeyTyped
        if (txtBairro.getText().length() >= 50) {
            evt.consume();
            JOptionPane.showMessageDialog(this, "Número máximo de caracteres digitados!");
        }
    }//GEN-LAST:event_txtBairroKeyTyped
    /**
     * Salva todas as informações colocadas nas lables para cadastrar o cliente
     *
     * @param evt
     */
    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        ArrayList<String> erros = new ArrayList();
        ArrayList<String> ListaCliente = new ArrayList();

        lblNome.setForeground(Color.BLACK);
        lblCPF.setForeground(Color.BLACK);
        lblDataNascimento.setForeground(Color.BLACK);
        lblGenero.setForeground(Color.BLACK);
        lblEstadoCivil.setForeground(Color.BLACK);
        lblEndereço.setForeground(Color.BLACK);
        lblCEP.setForeground(Color.BLACK);
        lblBairro.setForeground(Color.BLACK);
        lblCelular.setForeground(Color.BLACK);
        lblEmail.setForeground(Color.BLACK);

        if (txtNomeCliente.getText().trim().equals("")) {

            erros.add("Insira o Nome");
        }
        if (txtCPF.getText().replace(".", "").replace("-", "").trim().equals("")) {
            ;
            erros.add("Insira o CPF");

        }
        if (jdcDataNascimento.getDate() == null) {

            erros.add("Insira a Data de Nascimento");
        }
        if (cbxGenero.getSelectedIndex() == 0) {

            erros.add("Escolha o gênero");
        }

        if (cbxEstadoCivil.getSelectedIndex() == 0) {

            erros.add("Escolha o Estado civil");

        }

        if (txtLogradouro.getText().trim().equals("")) {

            erros.add("Insira o Endereço");

        }
        if (txtBairro.getText().trim().equals("")) {

            erros.add("Insira o Bairro");

        }
        if (txtCEP.getText().replace("-", "").trim().equals("")) {

            erros.add("Insira o CEP");
        }
        if (txtEmail.getText().trim().equals("")) {

            erros.add("Insira o Email");

        }

        if (txtCelular.getText().replace("(", "").replace(")", "").replace("-", "").trim().equals("")) {

            erros.add("Insira o Número de telefone");

        }
        String texto = "";

        if (erros.size() > 0) {
            for (int i = 0; i < erros.size(); i++) {
                texto += erros.get(i) + "\n";
            }
            JOptionPane.showMessageDialog(rootPane, texto);
        } else if (erros.size() <= 0) {
            int resposta = JOptionPane.showConfirmDialog(null, "Deseja Salvar?", "Salvar", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (resposta == 0) {
                try {
                    String Nome_cliente = txtNomeCliente.getText();
                    String CPF = txtCPF.getText().replace(".", "").replace(".", "").replace("-", "");
                    Date DataNascimento = jdcDataNascimento.getDate();
                    String Genero = cbxGenero.getSelectedItem().toString();
                    String EstadoCivil = cbxEstadoCivil.getSelectedItem().toString();
                    String Logradouro = txtLogradouro.getText();
                    String CEP = txtCEP.getText().replace("-", "");
                    String Bairro = txtBairro.getText();
                    String Celular = txtCelular.getText().replace("(", "").replace(")", "").replace("-", "");
                    String Email = txtEmail.getText();

                    Cliente objCliente = new Cliente();
                    objCliente.setNome(Nome_cliente);
                    objCliente.setCPF(CPF);
                    objCliente.setDataNascimento(DataNascimento);
                    objCliente.setGenero(Genero);
                    objCliente.setEstadoCivil(EstadoCivil);
                    objCliente.setEndereco(Logradouro);
                    objCliente.setCEP(CEP);
                    objCliente.setBairro(Bairro);
                    objCliente.setCelular(Celular);
                    objCliente.setEmail(Email);

                    ClienteDAO salvarCliente = new ClienteDAO();
                    salvarCliente.Salvar(objCliente);

                    ListarTabela();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e);

                }

            }
        }
    }//GEN-LAST:event_btnSalvarActionPerformed
    /**
     * Chama a função limparCampos
     *
     * @param evt
     */
    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        limparCampos();
    }//GEN-LAST:event_btnLimparActionPerformed
    /**
     * Função que chama outras funções para conseguir alterar um cliente já
     * cadastrado
     *
     * @param evt
     */
    private void btnAlterarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarClienteActionPerformed
        alterarCliente();
        ListarTabela();
        limparCampos();
        btnAlterarCliente.setVisible(false);
        btnAlterarCliente.setEnabled(false);
    }//GEN-LAST:event_btnAlterarClienteActionPerformed

    private void rbNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbNomeActionPerformed

    /**
     * Função que mostra uma tabela com os clientes de acordo com o CPF ou o
     * nome no campo de busca
     */
    public void ListarTabela() {
        DefaultTableModel Modelo = (DefaultTableModel) Tabela_Cliente.getModel();
        Modelo.setNumRows(0);
        ClienteDAO clienteDAO = new ClienteDAO();

        for (Cliente cli : clienteDAO.ListarCliente()) {
            Modelo.addRow(new String[]{
                cli.getCPF(),
                cli.getNome(),
                cli.getCelular(),
                cli.getEmail(),
                cli.getDataNascimento().toString(),
                cli.getGenero(),
                cli.getEstadoCivil(),
                cli.getEndereco(),
                cli.getBairro(),
                cli.getCEP()
            });

        }
    }

    /**
     * Função que utiliza o nome para buscar um cliente já cadastrado
     *
     * @param Busca
     */
    public void BuscarporNome(String Busca) {
        DefaultTableModel Modelo = (DefaultTableModel) Tabela_Cliente.getModel();
        Modelo.setNumRows(0);
        ClienteDAO clienteDAO = new ClienteDAO();

        for (Cliente cli : clienteDAO.BuscarClienteNome(Busca)) {
            Modelo.addRow(new String[]{
                cli.getCPF(),
                cli.getNome(),
                cli.getCelular(),
                cli.getEmail(),
                cli.getDataNascimento().toString(),
                cli.getGenero(),
                cli.getEstadoCivil(),
                cli.getEndereco(),
                cli.getBairro(),
                cli.getCEP()
            });

        }
    }

    /**
     * Função que utiliza o CPF para buscar um cliente já cadastrado
     *
     * @param Busca
     */
    public void BuscarporCPF(String Busca) {
        DefaultTableModel Modelo = (DefaultTableModel) Tabela_Cliente.getModel();
        Modelo.setNumRows(0);
        ClienteDAO clienteDAO = new ClienteDAO();

        for (Cliente cli : clienteDAO.BuscarClientecpf(Busca)) {
            Modelo.addRow(new String[]{
                cli.getCPF(),
                cli.getNome(),
                cli.getCelular(),
                cli.getEmail(),
                cli.getDataNascimento().toString(),
                cli.getGenero(),
                cli.getEstadoCivil(),
                cli.getEndereco(),
                cli.getBairro(),
                cli.getCEP()
            });

        }
    }
    
    
 
    /**
     * Função que oculta alguns campos da tabela de clientes
     */
    public void OcultarCampos() {
        Tabela_Cliente.getColumnModel().getColumn(6).setMinWidth(0);
        Tabela_Cliente.getColumnModel().getColumn(6).setMaxWidth(0);
        Tabela_Cliente.getColumnModel().getColumn(7).setMinWidth(0);
        Tabela_Cliente.getColumnModel().getColumn(7).setMaxWidth(0);
        Tabela_Cliente.getColumnModel().getColumn(8).setMinWidth(0);
        Tabela_Cliente.getColumnModel().getColumn(8).setMaxWidth(0);
        Tabela_Cliente.getColumnModel().getColumn(9).setMinWidth(0);
        Tabela_Cliente.getColumnModel().getColumn(9).setMaxWidth(0);
    }

    /**
     * Função que permite alterar um cliente já cadastrado
     */
    private void alterarCliente() {
        try {
            String Nome_cliente = txtNomeCliente.getText();
            String CPF = txtCPF.getText().replace(".", "").replace(".", "").replace("-", "");
            Date DataNascimento = jdcDataNascimento.getDate();
            String Genero = cbxGenero.getSelectedItem().toString();
            String EstadoCivil = cbxEstadoCivil.getSelectedItem().toString();
            String Logradouro = txtLogradouro.getText();
            String CEP = txtCEP.getText().replace("-", "");
            String Bairro = txtBairro.getText();
            String Celular = txtCelular.getText().replace("(", "").replace(")", "").replace("-", "");
            String Email = txtEmail.getText();

            Cliente objCliente = new Cliente();

            objCliente.setNome(Nome_cliente);
            objCliente.setCPF(CPF);
            objCliente.setDataNascimento(DataNascimento);
            objCliente.setGenero(Genero);
            objCliente.setEstadoCivil(EstadoCivil);
            objCliente.setEndereco(Logradouro);
            objCliente.setCEP(CEP);
            objCliente.setBairro(Bairro);
            objCliente.setCelular(Celular);
            objCliente.setEmail(Email);

            ClienteDAO alterClienteDAO = new ClienteDAO();
            alterClienteDAO.Alterar(objCliente);
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, erro);
        }
    }

    /**
     * Função que consegue limpar os campos de criação do cliente
     */
    public void limparCampos() {
        txtNomeCliente.setText("");
        txtCPF.setText("");
        txtLogradouro.setText("");
        txtBairro.setText("");
        txtCEP.setText("");
        cbxEstadoCivil.setSelectedIndex(0);
        cbxGenero.setSelectedIndex(0);
        txtEmail.setText("");
        txtCelular.setText("");
        jdcDataNascimento.setDate(null);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnAlterar;
    private javax.swing.JPanel CadastroCliente;
    private javax.swing.JPanel ConsuCliente;
    private javax.swing.JTable Tabela_Cliente;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btNovoCadastro;
    private javax.swing.JButton btProcurar;
    private javax.swing.JButton btnAlterarCliente;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox<String> cbxEstadoCivil;
    private javax.swing.JComboBox<String> cbxGenero;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private com.toedter.calendar.JDateChooser jdcDataNascimento;
    private javax.swing.JLabel lblBairro;
    private javax.swing.JLabel lblCEP;
    private javax.swing.JLabel lblCPF;
    private javax.swing.JLabel lblCelular;
    private javax.swing.JLabel lblDataNascimento;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblEndereço;
    private javax.swing.JLabel lblEstadoCivil;
    private javax.swing.JLabel lblGenero;
    private javax.swing.JLabel lblNome;
    private javax.swing.JRadioButton rbCPF;
    private javax.swing.JRadioButton rbNome;
    private javax.swing.JTextField txtBairro;
    private javax.swing.JTextField txtBusca;
    private javax.swing.JFormattedTextField txtCEP;
    private javax.swing.JFormattedTextField txtCPF;
    private javax.swing.JFormattedTextField txtCelular;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtLogradouro;
    private javax.swing.JTextField txtNomeCliente;
    // End of variables declaration//GEN-END:variables
}
